#!/bin/sh
# (c) 2007, Erez Zadok <ezk@cs.sunysb.edu> (initial version)
# Licensed under the terms of the GNU GPL License version 2
#
# Check source files for compliance with coding standards, using terse
# output in the style that g/cc produces.  This output can be easily parsed
# within text editors (e.g., emacs/vim) which can produce a split text
# screen showing in one screen the error message, and in another screen the
# corresponding source file, with the cursor placed on the offending line.
# See for example the documentation for Emacs's "next-error" command, often
# bound to M-x ` (ESC x back-tick).

# Usage: checkfiles file [files...]
#        if "file" is a directory, will check all *.[hc] files recursively

# check usage
usage() {
	echo "Usage: checkfiles file [files...]"
	echo "(if \"file\" is a directory, check recursively for all C sources/headers)"
	exit 1
}
if test -z "" ; then
	usage
fi
if ! test -f scripts/checkpatch.pl ; then
	echo "checkfiles: must run from top level source tree"
	exit 1
fi

# check coding-style compliance of each source file found, using terse output
find "$@" -type f -name '*.[hc]' | \
while read f ; do
	diff -u /dev/null $f | perl scripts/checkpatch.pl -t -
done
